import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
 
public class Map {
	// 0- liber
	// 1 - depozit
	// 2 -client
	private int[][] Matrice;
	private int rows, cols;
	private Drona[] d;
	private Produs[] p;
	private Warehouse[] dep;
	private Comenzi[] c;
	private int nrDrone;
	private int ture;
	private int maxPayload;
	private int nrProduse;
	private int nrDepozite;
	private int nrComenzi;

	public Map(String fileName) {

		try {
			Scanner scanner = new Scanner(new File(fileName));
			this.rows = scanner.nextInt();
			this.cols = scanner.nextInt();// citim nr de randuri si de coloane
			Matrice = new int[rows][cols];
			for (int i = 0; i < this.rows; i++) {
				for (int j = 0; j < this.cols; j++)
					Matrice[i][j] = 0;
			} // initializam matricea goala
			this.nrDrone = scanner.nextInt(); // citim nr de drone
			d = new Drona[nrDrone];
			ture = scanner.nextInt(); // numarul de ture
			maxPayload = scanner.nextInt();// numarul maxim de incarcare a unei
											// drone
			nrProduse = scanner.nextInt();
			p = new Produs[nrProduse];
			for (int i = 0; i < nrProduse; i++) {
				int weight;
				weight = scanner.nextInt();
				p[i] = new Produs(i, weight);
			}
			nrDepozite = scanner.nextInt();
			dep = new Warehouse[nrDepozite];
			for (int i = 0; i < nrDepozite; i++) {
				int x, y;
				x = scanner.nextInt();
				y = scanner.nextInt();
				dep[i] = new Warehouse(i, x, y, nrProduse);
				this.setDepozit(x, y);
				for (int j = 0; j < nrProduse; j++) {
					int cantitateProdus = scanner.nextInt();
					dep[i].setProdus(j, cantitateProdus);
				}
			}
			for (int i = 0; i < nrDrone; i++) {
				d[i] = new Drona(i, new int[0], dep[0].getX(), dep[0].getY());
			}
			nrComenzi = scanner.nextInt();
			c = new Comenzi[nrComenzi];
			for (int i = 0; i < nrComenzi; i++) {
				int x, y;
				int nrItems;
				x = scanner.nextInt();
				y = scanner.nextInt();
				nrItems = scanner.nextInt();
				c[i] = new Comenzi(i, x, y, nrItems);
				this.setClient(x, y);
				for (int j = 0; j < nrItems; j++) {
					int produs = scanner.nextInt();
					c[i].setComenzi(j, produs);
				}

			}
			scanner.close();
		} catch (FileNotFoundException e) {
			System.out.println(e.getMessage());
		}
	}

	public void afisareGrid() {
		for (int i = 0; i < this.rows; i++) {

			for (int j = 0; j < this.cols; j++)
				System.out.print(Matrice[i][j] + " ");
			System.out.println();
		}
	}

	public int dronaLibera() {
		for (int i = 0; i < nrDrone; i++)
			if (d[i].getBusy() == 0)
				return i;
		return 0;
	}
	public void setDepozit(int x, int y) {
		Matrice[x][y] = 1;
	}

	public void setClient(int x, int y) {
		Matrice[x][y] = 2;
	}

	public int[][] getMatrice() {
		return this.Matrice;
	}

	public int getRows() {
		return this.rows;
	}

	public int getCols() {
		return this.cols;
	}

	public int getNrDrone() {
		return this.nrDrone;
	}

	public int getTure() {
		return this.ture;
	}

	public int getmaxPayload() {
		return this.maxPayload;
	}

	public int getNrProduse() {
		return this.nrProduse;
	}

	public int getNrDepozite() {
		return this.nrDepozite;
	}

	public int getNrComenzi() {
		return this.nrComenzi;
	}
}
